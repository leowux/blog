---
description: 
globs: 
alwaysApply: true
---
# 项目开发规则（rule）

1. **代码风格**
   - 统一使用 Prettier/Tailwind CSS 规范，保持缩进、空格、引号等一致。
   - 组件、页面文件名统一使用小写字母和中划线分隔。

2. **目录结构**
   - `app/` 目录下只放页面、布局、全局组件和工具函数。
   - `posts/` 目录专门存放 mdx 格式的文章内容。
   - `public/` 目录用于存放静态资源（如图片）。

3. **组件开发**
   - 复用性强的 UI 组件放在 `app/components/` 下，单一职责，便于维护。
   - 组件命名采用大驼峰（如：`NavBar`、`Footer`）。

4. **样式规范**
   - 全局样式写在 `app/global.css`，局部样式优先使用 Tailwind CSS 工具类。
   - 禁止在组件内写内联样式，除非特殊需求。

5. **数据与工具**
   - 文章相关的工具函数统一放在 `app/blog/utils.ts`。
   - 文章内容通过 mdx 文件管理，禁止直接在页面硬编码内容。

6. **SEO 与元数据**
   - 每个页面应设置合适的 `title`、`description`，并在 `metadata` 中维护。
   - 保持 `sitemap.ts`、`robots.ts`、`rss/route.ts` 等文件内容及时更新。

7. **提交规范**
   - 提交信息需简明扼要，首句说明本次更改的主要内容。
   - 重要变更需在 PR 描述中详细说明。

8. **本地开发**
   - 推荐使用 pnpm 进行依赖管理，避免使用 npm/yarn。
   - 运行前请确保依赖已安装并且本地环境与 `tsconfig.json` 保持一致。

9. **安全与隐私**
   - 禁止将敏感信息（如 API 密钥、个人私数据）写入代码库。
   - 静态资源和文章内容不得包含侵权或敏感内容。

10. **协作约定**
    - 变更全局样式、核心组件、路由结构需提前沟通。
    - 合并代码前需自测通过，确保不影响主流程。

11. **console.log 规范**
    - `console.log(">>> ${1}"${1})`